// NewtonSolver.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <math.h>

#define eps 0.000001
double fx(double x) { return x * x-17; } // вычисляемая функция
double dfx(double x) { return 2 * x; } // производная функции

typedef double(*function)(double x); // задание типа function

using namespace std;
double solve(function fx, function dfx, double x0) {
    double x1 = x0 - fx(x0) / dfx(x0); // первое приближение
    int i = 0;
    while (fabs(x1 - x0) > eps) { // пока не достигнута точность 0.000001
        
        x0 = x1;
        x1 = x0 - fx(x0) / dfx(x0); // последующие приближения

        cout << "iteration " << i << "  " << "x= " << x1 << endl;
        i++;
    }
    return x1;
}


int main() {

    cout << "Newton solver demo\n";
    cout << solve(fx, dfx, 1) << endl;
    
    system("pause");
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
